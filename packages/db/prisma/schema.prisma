generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./db.sqlite"
}

model UserProfile {
  discordId   String   @id // This ID should correspond to the Clerk user ID
  id          String   @default(cuid())
  email       String?  // The user's email address.
  name        String?  // The user's full name.
  image       String?  // The URL of the profile picture.
  experience  String?  // Description of user experience.
  workType    String?  // Description of the type of work the user does.
  chats       Chat[]   // Chats associated with the user
  messages    Message[]  // Messages sent by the user
}

model Chat {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  users     UserProfile[]  // Users participating in the chat
  messages  Message[]  // Messages in the chat
}

model Message {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  content   String
  user      UserProfile @relation(fields: [userId], references: [discordId])
  userId    String
  chat      Chat      @relation(fields: [chatId], references: [id])
  chatId    String
}

model Post {
  id      String @id @default(cuid())
  title   String
  content String
}

model Property {
  id      String   @id @default(cuid())
  Address String
  City    String
  State   String
  Zip     Int
  Beds    Int
  Baths   Int
  Sqft    Int
  Type    String
  Status  String
  Image   String
  Desc    String
  listings Listing[]
}

model Listing {
  id             String   @id @default(cuid())
  propertyId     String
  property       Property @relation(fields: [propertyId], references: [id])
  jobType        String
  contractorType String
  readyToHire    Boolean
  title          String
  description    String
  budget         Int
  bids           Bid[]
}


model Bid {
  id         String   @id @default(cuid())
  userId     String   // Foreign key referencing UserProfile discordId
  listingId  String
  listing    Listing? @relation(fields: [listingId], references: [id])
  bidAmount  Int?
  bidMessage String?
  bidStatus  String?
  bidDate    DateTime @default(now())
}








